name: humble-build

on:
  push:
    branches: [ humble ]
  pull_request:
    branches: [ humble ]

env:
  ROS_DISTRO: humble

jobs:
  tii-deb-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout rmw_fastrtps
        uses: actions/checkout@v2
        with:
          submodules: recursive
      # Run docker build
      - name: Run docker builder
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
        run: |
          set -eux
          mkdir bin
          source build.sh
          build_image $IMAGE_NAME latest ${{env.ROS_DISTRO}}

      # Run docker build
      - name: Run foonathan_memory_vendor docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: foonathan_memory_vendor
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: ""
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      # Run docker build
      - name: Run Fast-CDR docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: Fast-CDR
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: ""
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run Fast-DDS docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: Fast-DDS
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run rosidl_typesupport_fastrtps/fastrtps_cmake_module docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rosidl_typesupport_fastrtps/fastrtps_cmake_module
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run rosidl_typesupport_fastrtps/rosidl_typesupport_fastrtps_cpp docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rosidl_typesupport_fastrtps/rosidl_typesupport_fastrtps_cpp
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps \
            ros-${{env.ROS_DISTRO}}-fastrtps-cmake-module"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run rosidl_typesupport_fastrtps/rosidl_typesupport_fastrtps_c docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rosidl_typesupport_fastrtps/rosidl_typesupport_fastrtps_c
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps \
            ros-${{env.ROS_DISTRO}}-fastrtps-cmake-module \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-cpp"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run rmw_fastrtps/rmw_fastrtps_shared_cpp docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rmw_fastrtps/rmw_fastrtps_shared_cpp
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps \
            ros-${{env.ROS_DISTRO}}-fastrtps-cmake-module \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-cpp \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-c"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Run rmw_fastrtps/rmw_fastrtps_dynamic_cpp docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rmw_fastrtps/rmw_fastrtps_dynamic_cpp
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps \
            ros-${{env.ROS_DISTRO}}-fastrtps-cmake-module \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-cpp \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-c \
            ros-${{env.ROS_DISTRO}}-rmw-fastrtps-shared-cpp"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"
      - name: Run rmw_fastrtps/rmw_fastrtps_cpp docker build
        env:
          ROS: 1
          IMAGE_NAME: tii_fastdds_builder
          PACKAGE_NAME: rmw_fastrtps/rmw_fastrtps_cpp
          ROS_DISTRO: ${{env.ROS_DISTRO}}
          DEPENDENCIES: "ros-${{env.ROS_DISTRO}}-foonathan-memory-vendor \
            ros-${{env.ROS_DISTRO}}-fastcdr \
            ros-${{env.ROS_DISTRO}}-fastrtps \
            ros-${{env.ROS_DISTRO}}-fastrtps-cmake-module \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-cpp \
            ros-${{env.ROS_DISTRO}}-rosidl-typesupport-fastrtps-c \
            ros-${{env.ROS_DISTRO}}-rmw-fastrtps-shared-cpp"
        run: |
          set -eux
          source build.sh
          build_package $IMAGE_NAME latest $PACKAGE_NAME "$DEPENDENCIES"

      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: fastdds_debs
          path: bin/*.deb
          retention-days: 14

  artifactory:
    runs-on: ubuntu-latest
    needs: tii-deb-build
    if: github.event_name == 'push'
    strategy:
      matrix:
        package: [
          foonathan_memory_vendor, fastcdr, fastrtps,
          fastrtps_cmake_module, rosidl_typesupport_fastrtps_c, rosidl_typesupport_fastrtps_cpp,
          rmw_fastrtps_cpp, rmw_fastrtps_dynamic_cpp, rmw_fastrtps_shared_cpp
        ]

    # if: github.event_name == 'push'
    steps:
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          name: fastdds_debs
          path: bin/
      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_TOKEN }}
      - name: Upload to Artifactory
        env:
          ARTIFACTORY_REPO: ssrc-deb-public-local
          DISTRIBUTION: jammy
          COMPONENT: fog-sw-sros
          ARCHITECTURE: amd64
          BUILD_NAME: ${{ matrix.package }}
          CI: true
        run: |
          set -exu
          deb_pkg_name=$(echo ${{ matrix.package }} | tr _ -)
          pkg=$(find bin -name "ros-${{env.ROS_DISTRO}}-${deb_pkg_name}_*.deb")
          if [ "${pkg}" == "" ]; then echo "ERROR: Package not found."; exit 1; fi
          pkg_name=$(basename ${pkg})
          jfrog rt u --deb "$DISTRIBUTION/$COMPONENT/$ARCHITECTURE" \
                     --target-props COMMIT="$GITHUB_SHA" \
                     --build-name "$BUILD_NAME" \
                     --build-number "$GITHUB_SHA" \
                     "$pkg" \
                     "$ARTIFACTORY_REPO/$pkg_name"
          jfrog rt build-publish "$BUILD_NAME" "$GITHUB_SHA"
          jfrog rt bpr "$BUILD_NAME" "$GITHUB_SHA" "$ARTIFACTORY_REPO" \
                       --status dev \
                       --comment "development build"
